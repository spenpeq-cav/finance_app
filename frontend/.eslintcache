[{"/home/spencer/Desktop/finance_app_env/src/frontend/src/index.js":"1","/home/spencer/Desktop/finance_app_env/src/frontend/src/App.js":"2","/home/spencer/Desktop/finance_app_env/src/frontend/src/reportWebVitals.js":"3","/home/spencer/Desktop/finance_app_env/src/frontend/src/components/Link.js":"4","/home/spencer/Desktop/finance_app_env/src/frontend/src/screens/HomeScreen.js":"5","/home/spencer/Desktop/finance_app_env/src/frontend/src/screens/DashboardScreen.js":"6","/home/spencer/Desktop/finance_app_env/src/frontend/src/components/TopAppBar.js":"7","/home/spencer/Desktop/finance_app_env/src/frontend/src/components/ListItems.js":"8","/home/spencer/Desktop/finance_app_env/src/frontend/src/screens/AccountsScreen.js":"9"},{"size":500,"mtime":1615350859056,"results":"10","hashOfConfig":"11"},{"size":671,"mtime":1620797433440,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1614887540149,"results":"13","hashOfConfig":"11"},{"size":2712,"mtime":1620328568976,"results":"14","hashOfConfig":"11"},{"size":344,"mtime":1618366023298,"results":"15","hashOfConfig":"11"},{"size":10949,"mtime":1620335756946,"results":"16","hashOfConfig":"11"},{"size":1335,"mtime":1618694285808,"results":"17","hashOfConfig":"11"},{"size":2443,"mtime":1620798523477,"results":"18","hashOfConfig":"11"},{"size":2054,"mtime":1620798457860,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"14l9qey",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/spencer/Desktop/finance_app_env/src/frontend/src/index.js",[],["43","44"],"/home/spencer/Desktop/finance_app_env/src/frontend/src/App.js",[],"/home/spencer/Desktop/finance_app_env/src/frontend/src/reportWebVitals.js",[],"/home/spencer/Desktop/finance_app_env/src/frontend/src/components/Link.js",["45","46"],"import React, { useState, useEffect } from 'react';\nimport { PlaidLink } from 'react-plaid-link';\nimport ReactJson from 'react-json-view';\n\n\nfunction Link({match}) {\n    const [link_token, set_link_token] = useState('')\n    const [access_token, set_access_token] = useState('')\n\n    const [accounts, set_accounts] = useState('')\n    const [transactions, set_transactions] = useState('')\n    \n    const onSuccess = (token, metadata) =>{\n      console.log('Exchanging Access Token...')\n      var url = 'http://127.0.0.1:8000/plaid_api/access_token/'\n      const configs = {\n        method: \"POST\",\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n          public_token: token,\n        })\n      }\n      \n      fetch(url, configs).then(response => response.json()).then(data => set_access_token(data.access_token))\n    }\n    \n\n    function fetchLinkToken(){\n      console.log('Fetching Link Token...')\n      var url = 'http://127.0.0.1:8000/plaid_api/link_token/'\n\n      fetch(url).then(response => response.json()).then(data => set_link_token(data.link_token))\n      \n    }\n\n    function fetchAccounts(){\n      console.log('Accounts info...')\n      var url = 'http://127.0.0.1:8000/plaid_api/accounts/'\n      const configs = {\n        method: \"POST\",\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n          access_token: access_token,\n        })\n      }\n      fetch(url, configs).then(response => response.json()).then(data => set_accounts(data))\n    }\n\n    function fetchTransactions(){\n      console.log('Transaction info...')\n      var url = 'http://127.0.0.1:8000/plaid_api/transactions/'\n      const configs = {\n        method: \"POST\",\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n          access_token: access_token,\n        })\n      }\n      fetch(url, configs).then(response => response.json()).then(data => set_transactions(data))\n    }\n    \n    useEffect(() => {\n      if(link_token === ''){\n        fetchLinkToken()\n      }\n    }, [link_token])\n\n    return (\n      <div>\n        \n        <h1>Connect to Plaid to get started.</h1>\n\n        <PlaidLink\n        className=\"CustomButton\"\n        style={{ padding: '20px', fontSize: '16px', cursor: 'pointer' }}\n        token={link_token ? link_token : ''}\n        onSuccess={onSuccess}>\n          Open Plaid and connect your bank!\n        </PlaidLink>\n\n        <div>\n          <button id=\"transactions-btn\" onClick = {() => {fetchTransactions()}}>Get Transactions</button>\n        </div>\n\n        <div>\n          <ReactJson src={transactions} theme=\"monokai\" collapsed= {true} />\n        </div>\n\n      </div>\n    );\n}\n\nexport default Link;\n","/home/spencer/Desktop/finance_app_env/src/frontend/src/screens/HomeScreen.js",["47"],"import { Link } from '@material-ui/core'\nimport React from 'react'\nimport Button from '@material-ui/core/Button';\n\nfunction HomeScreen() {\n    return (\n        <div>\n            <h1>Home Screen</h1>\n            <Button variant=\"outlined\" color=\"inherit\" href=\"/dashboard\">To Dashboard</Button>\n        </div>\n    )\n}\n\nexport default HomeScreen\n","/home/spencer/Desktop/finance_app_env/src/frontend/src/screens/DashboardScreen.js",["48","49","50","51"],"import React, { useState, useEffect }  from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport { Container, Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\nimport { PlaidLink } from 'react-plaid-link';\nimport ReactJson from 'react-json-view';\n\nimport TopAppBar from '../components/TopAppBar'\nimport ListItems from '../components/ListItems'\n\n\n\nconst useStyles = makeStyles(({\n    root: {\n      display: 'flex',\n    },\n\n    sidebar: {\n        height: '100vh',\n        background: '#333333',\n        color: '#cead59',\n        width: '10vh',\n        fontSize: 16,\n    },\n\n    paper: {\n        padding: 25,\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n        padding: 25,\n        height: 240,\n        textAlign: 'center',\n        background: '#d5e6f3'\n    },\n\n    items: {\n        margin: 20,\n    },\n\n    contentcontainer: {\n        background: '#579ACE',\n        padding: '55px 150px',\n    },\n  }));\n\n\nfunction DashboardScreen() {\n    const classes = useStyles();\n\n    const [linkLoaded, setLinkLoaded] = useState(false)\n\n    const [link_token, set_link_token] = useState('')\n    const [access_token, set_access_token] = useState('')\n\n    const [accounts, set_accounts] = useState('')\n    const [transactions, set_transactions] = useState('')\n    \n\n\n    function fetchLinkToken(){\n      console.log('Fetching Link Token...')\n      var url = 'http://127.0.0.1:8000/plaid_api/link_token/'\n\n      fetch(url).then(response => response.json()).then(data => set_link_token(data.link_token))\n      \n    }\n\n    function fetchAccounts(){\n      console.log('Accounts info...')\n      var url = 'http://127.0.0.1:8000/plaid_api/accounts/'\n      const configs = {\n        method: \"POST\",\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n          access_token: access_token,\n        })\n      }\n      fetch(url, configs).then(response => response.json()).then(data => set_accounts(data))\n    }\n\n    function fetchTransactions(){\n      console.log('Transaction info...')\n      var url = 'http://127.0.0.1:8000/plaid_api/transactions/'\n      const configs = {\n        method: \"POST\",\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n          access_token: access_token,\n        })\n      }\n      fetch(url, configs).then(response => response.json()).then(data => set_transactions(data))\n    }\n\n    const onSuccess = (token, metadata) =>{\n        console.log('Exchanging Access Token...')\n        var url = 'http://127.0.0.1:8000/plaid_api/access_token/'\n        const configs = {\n            method: \"POST\",\n            headers: {'Content-type': 'application/json'},\n            body: JSON.stringify({\n            public_token: token,\n            })\n        }\n        \n        fetch(url, configs).then(response => response.json()).then(data => set_access_token(data.access_token))\n    }\n\n    useEffect(() => {\n        if(link_token === ''){\n            fetchLinkToken()\n        }\n        if(transactions !== ''){\n            setLinkLoaded(true)\n        }\n      }, [link_token, transactions])\n\n\n    return (\n        <div>\n            { linkLoaded ? \n                <div>\n                    <TopAppBar />\n            \n                    <Grid container>\n                        <Grid item sm={2} className={classes.sidebar}>\n                            <Box>\n                                <ListItems className={classes.psaper}/>\n                            </Box>\n                            \n                        </Grid>\n                        <Grid item lg={10} className={classes.contentcontainer}>\n                \n                            <Grid container spacing={6}>\n                                <Grid item xs={9}>\n                                    <Paper className={classes.paper}>\n                                        <Typography>Total Transactions: {transactions['total_transactions']}</Typography>\n                                        <Typography>Total Accounts: {transactions['accounts'].length}</Typography>\n                                        <Typography>Total Balances: </Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>\n                                            $ 3,345.56\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Paper className={classes.paper}>\n                                        <Typography>Funds and some more text to put in here</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>\n                                            $ 3,345.56\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Paper className={classes.paper}>\n                                        <Typography>Funds and some more text to put in here</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>\n                                            $ 3,345.56\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Paper className={classes.paper}>\n                                        <Typography>Funds and some more text to put in here</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>\n                                            $ 3,345.56\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Paper className={classes.paper}>\n                                        <Typography>Funds and some more text to put in here</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>\n                                            $ 3,345.56\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Paper className={classes.paper}>\n                                        <Typography>Funds and some more text to put in here</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>\n                                            $ 3,345.56\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Paper className={classes.paper}>\n                                        <Typography>Funds and some more text to put in here</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>Funds</Typography>\n                                        <Typography>\n                                            $ 3,345.56\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                            </Grid>\n                            <div>\n                                <ReactJson src={transactions} theme=\"monokai\" collapsed= {true} />\n                            </div>\n                \n                        </Grid>\n                    </Grid>\n                </div> \n                : (\n                    <div>\n                        <TopAppBar />\n                \n                        <Grid container>\n                            <Grid item sm={2} className={classes.sidebar}>\n                                <Box>\n                                    <ListItems className={classes.psaper}/>\n                                </Box>\n                                \n                            </Grid>\n                            <Grid item lg={10} className={classes.contentcontainer}>\n                                <h1>Connect to Plaid to get started.</h1>\n\n                                <PlaidLink\n                                className=\"CustomButton\"\n                                style={{ padding: '20px', fontSize: '16px', cursor: 'pointer' }}\n                                token={link_token ? link_token : ''}\n                                onSuccess={onSuccess}>\n                                Open Plaid and connect your bank!\n                                </PlaidLink>\n\n                                <div>\n                                    <button id=\"transactions-btn\" onClick = {() => {fetchTransactions()}}>Get Transactions</button>\n                                </div>\n\n                            </Grid>\n                        </Grid>\n                    </div>\n                )\n            }\n            \n            \n        </div>\n    )\n}\n\nexport default DashboardScreen\n","/home/spencer/Desktop/finance_app_env/src/frontend/src/components/TopAppBar.js",["52","53"],"import React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(({\n    \n    appBar: {\n      background: '#1E1E1E',\n      color: '#cadff0',\n      \n      height: 75,\n    },\n    text: {\n        flexGrow: 1,\n        marginLeft: 45,\n    },\n    button: {\n        fontSize: 16,\n        padding: '6px 70px',\n        backgroundColor: '#9ace57',\n        color: '#1E1E1E',\n        '&:hover': {\n            backgroundColor: '#729b3d'\n        },\n    },\n\n\n  }));\n\nfunction TopAppBar() {\n    const classes = useStyles();\n    return (\n        <div>\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h4\" className={classes.text}>\n                        Finance Tracker\n                    </Typography>\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\" className={classes.button}>Login</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default TopAppBar\n","/home/spencer/Desktop/finance_app_env/src/frontend/src/components/ListItems.js",[],"/home/spencer/Desktop/finance_app_env/src/frontend/src/screens/AccountsScreen.js",["54","55","56","57","58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":10,"column":12,"nodeType":"66","messageId":"67","endLine":10,"endColumn":20},{"ruleId":"64","severity":1,"message":"68","line":36,"column":14,"nodeType":"66","messageId":"67","endLine":36,"endColumn":27},{"ruleId":"64","severity":1,"message":"69","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":14},{"ruleId":"64","severity":1,"message":"70","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":34,"column":9,"nodeType":"73","messageId":"74","endLine":34,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":59,"column":12,"nodeType":"66","messageId":"67","endLine":59,"endColumn":20},{"ruleId":"64","severity":1,"message":"68","line":72,"column":14,"nodeType":"66","messageId":"67","endLine":72,"endColumn":27},{"ruleId":"64","severity":1,"message":"75","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":18},{"ruleId":"64","severity":1,"message":"76","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":16},{"ruleId":"64","severity":1,"message":"77","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"78","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"70","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":19},{"ruleId":"64","severity":1,"message":"79","line":9,"column":10,"nodeType":"66","messageId":"67","endLine":9,"endColumn":19},{"ruleId":"64","severity":1,"message":"80","line":10,"column":8,"nodeType":"66","messageId":"67","endLine":10,"endColumn":17},{"ruleId":"71","severity":1,"message":"72","line":35,"column":9,"nodeType":"73","messageId":"74","endLine":35,"endColumn":16},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'accounts' is assigned a value but never used.","Identifier","unusedVar","'fetchAccounts' is defined but never used.","'Link' is defined but never used.","'Container' is defined but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'PlaidLink' is defined but never used.","'ReactJson' is defined but never used.","no-global-assign","no-unsafe-negation"]